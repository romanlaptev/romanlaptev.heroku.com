<?xml version="1.0" encoding="UTF-8"?>
<xroot>
	<schema>
		<xdata db_name="" db_type="" export_date="" export_time="">
			<content>
					<node id="" type="">
						<title></title>
						<created></created>
						<changed></changed>
						<body_value></body_value>
					</node>
			</content>

			<content_links>
				<item content_id="" parent_id=""></item>
			</content_links>		

			<tag_groups>
				<item id="" name=""></item>
			</tag_groups>		

			<tag_links>
				<item content_id="" term_id=""></item>
			</tag_links>		

			<tag_list>
				<item id="" term_group_id="" parent_id="" name=""></item>
			</tag_list>		

		</xdata>
	</schema>

	<xdata db_name="notes.sqlite" db_type="sqlite" export_date="22-May-2020 09:14:19" export_time="1590113659">
		<tag_groups>
<item id="2" name="group2"></item>
<item id="3" name="group2--&apos;-&apos;--"></item>
		</tag_groups>		


		<content_links>
<item content_id="141" parent_id="118"></item>			
<item content_id="142" parent_id="118"></item>
<item content_id="112" parent_id="323"></item>
<item content_id="118" parent_id="323"></item>
<item content_id="120" parent_id="323"></item>
<item content_id="123" parent_id="323"></item>
<item content_id="135" parent_id="112"></item>
<item content_id="126" parent_id="323"></item>
<item content_id="323" parent_id="0"></item>
<item content_id="136" parent_id="120"></item>
		</content_links>		
		
		<content>

<node id="120" type="note" >
		<title>program</title>
		<created>1337690509</created>
		<changed>1437201058</changed>
		<body_value>========================= music wfm
добавить кнопку Save playlist - запрос сохранения json-плейлиста плеера в файл
добавление в плейлист треков происходит при копировании файлов из файловой панели в панель плейлиста
несохраненный плейлист имеет в заголовке название - “Новый плейлист”

========================= parse bookmarks
добавить поле для фильтра по ссылкам
вводимый текст через функцию $().contains фильтрует ссылки: скрывается все и отображаеются совпадающие ссылки

========================= remote DB
сделать json запросы к удаленной mysql-базе
ответы с результатами SQL-запросов приходят в json-формате

- для сайта на хостинге гугл сделать получение данных от удаленного sql-сервера на хостинге 500mb.net (по запросу от сайта с гугл-площадки, скрипт отдает результаты sql-запроса в json)
====================================

#!/usr/bin/perl
print "Content-Type: text/html\n\n";
print "&lt;h1&gt;Hello Perl world&lt;/h1&gt;";</body_value>
	</node>

<node id="142" type="note" >
	
		<title>CORS</title>
		<created>1425875462</created>
		<changed>1436190236</changed>
		<body_value>http://enable-cors.org/server_apache.html
в конфигурацию сервера добавить
    Alias /www/ "/home/"
    &lt;Directory /home&gt;
	Options All
	Allow from All
Header set Access-Control-Allow-Origin "*"
    &lt;/Directory&gt;

sudo service apache2 reload
модуль headers должен быть включен
a2enmod headers

после этого возможен аякс-запрос с http://mycomp/mnt/disk2/documents/0_sites/kontinent.info/phones.html к 
//------------------------- load data
	$.getJSON('http://vbox1/www/phones.json',function(data)
	{
		var items = [];
		$.each( data, function( key, val )
		{
			 items.push( val );
		});
		form_content ( items );
	});


-------------------- 
//crossdomain.xml в корне удаленного сайта с ресурсами для запросов
&lt;?xml version="1.0" ?&gt;
&lt;cross-domain-policy&gt;
&lt;allow-access-from domain="*" /&gt;
&lt;/cross-domain-policy&gt;

&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE cross-domain-policy SYSTEM "http://www.macromedia.com/xml/dtds/cross-domain-policy.dtd"&gt;
&lt;cross-domain-policy&gt;
	&lt;site-control permitted-cross-domain-policies="master-only"/&gt;
   &lt;allow-access-from domain="*" /&gt;
&lt;/cross-domain-policy&gt;
-----------------------------

//кроссдоменный запрос на странице
                  &lt;object type="application/x-shockwave-flash" data="video/player/uppod.swf" height="360" width="610"&gt;
                    &lt;param name="bgcolor" value="#ffffff"&gt;
                    &lt;param name="allowFullScreen" value="true"&gt;
                    &lt;param name="allowScriptAccess" value="always"&gt;
                    &lt;param name="wmode" value="transparent"&gt;
                    &lt;param name="movie" value="video/player/uppod.swf"&gt;
                    &lt;param name="flashvars" value="file=http://pilling-noski.ru/video/38d6ad973eabbc0682de77949df9a4361413813063.mp4"&gt;
                &lt;/object&gt;
=========================================
https://twitter.com/crossdomain.xml
&lt;cross-domain-policy xsi:noNamespaceSchemaLocation="http://www.adobe.com/xml/schemas/PolicyFile.xsd"&gt;
&lt;allow-access-from domain="twitter.com"/&gt;
&lt;allow-access-from domain="api.twitter.com"/&gt;
&lt;allow-access-from domain="search.twitter.com"/&gt;
&lt;allow-access-from domain="static.twitter.com"/&gt;
&lt;site-control permitted-cross-domain-policies="master-only"/&gt;
&lt;allow-http-request-headers-from domain="*.twitter.com" headers="*" secure="true"/&gt;
&lt;/cross-domain-policy&gt;</body_value>
	</node>

<node id="141" type="note" >
		<title>CMS</title>
		<created>1367985087</created>
		<changed>1367985087</changed>
		<body_value>======================================= установка PyroCMS
Не создавать вручную базу.....иначе -
PyroCMS is missing system/cms/config/database.php and cannot find the installer folder. Does your server have permission to access these files? .....Table 'pyro.default_users' doesn't exist.....

----------------------------------</body_value>
	</node>

<node id="136" type="note" >
		<title>Actionscript, Графики функций</title>
		<created>1397990312</created>
		<changed>1397990312</changed>
		<body_value>//===================================================
//Синусоида
//===================================================
_root.createEmptyMovieClip("sinus", 1);
sinus._y = 130;
sinus._x = 75; sinus.lineStyle(3,0);
for (i = 0; i &lt; Math.PI * 4; i += 0.01) 
{
	x = i*30;
	y = Math.sin(i) * 70;
	sinus.moveTo(x,y);
	sinus.lineTo(x + 1, y);
}

//===================================================
//Окружность
//===================================================
_root.createEmptyMovieClip("circle", 1);
circle._x = 75; 
circle._y = 100;
circle.lineStyle(3,0);
for (i = 0; i &lt; Math.PI * 6; i += 0.03)
{
	x = Math.cos(i) * 70;
	y = Math.sin(i) * 70;
	circle.moveTo(x,y);
	circle.lineTo(x + 1, y);
}

px = 50; // сжатие по X
py = 70; // сжатие по Y
for (n1 = 0; n1 &lt; Math.PI * 6; n1 += 0.03)
{
	x = Math.cos(n1) * px;
	y = Math.sin(n1) * py;
	x = x + 150;
	circle.moveTo(x,y);
	circle.lineTo(x + 1, y);
}

px = 70; // сжатие по X
py = 50; // сжатие по Y
for (n1 = 0; n1 &lt; Math.PI * 6; n1 += 0.03)
{
	x = Math.cos(n1) * px;
	y = Math.sin(n1) * py;
	x = x + 300;
	circle.moveTo(x,y);
	circle.lineTo(x + 1, y);
}

//===================================================
//Квадрат
//===================================================
_root.createEmptyMovieClip("box", 1);
box._y = 200;
box._x = 150; 
box.lineStyle(3,0);
a = 0;
for (n1 = 0; n1 &lt; 60; n1 += 1)
{
	x = 50 * Math.round(Math.cos(a));
	y = 50 * Math.round(Math.sin(a));
	box.lineTo(x,y);
	a = a + 0.1;
}

//===================================================
//Крест 1
//===================================================
_root.createEmptyMovieClip("cross1", 1);
cross1._y = 200;
cross1._x = 150; 
cross1.lineStyle(3,0);
a = 0;
for (n1 = 0; n1 &lt; 62; n1 += 1)
{
	x = 50 * Math.round((2*Math.cos(a)));
	y = 50 * Math.round((2*Math.sin(a)));
	cross1.lineTo(x,y);
	a = a + 0.1;
}

//===================================================
//Крест 2
//===================================================
_root.createEmptyMovieClip("cross2", 1);
cross2._y = 200;
cross2._x = 150; 
cross2.lineStyle(3,0);
a = 0;
for (n1 = 0; n1 &lt; 62; n1 += 1)
{
	x = 30 * Math.round((4*Math.cos(a)));
	y = 30 * Math.round((4*Math.sin(a)));
	cross2.lineTo(x,y);
	a = a + 0.1;
}

//===================================================
//Ромб
//===================================================
_root.createEmptyMovieClip("romb", 1);
romb._y = 200;
romb._x = 150; 
romb.lineStyle(3,0);
for (n1 = 0; n1 &lt; 8; n1 += 1)
{
	x = 50 * Math.round(Math.cos(n1));
	y = 50 * Math.round(Math.sin(n1));
	romb.lineTo(x,y);
}

//===================================================
//Лестница
//===================================================
_root.createEmptyMovieClip("stairway", 1);
stairway._y = 200;
stairway._x = 150; 
stairway.lineStyle(3,0);
a = 0;
for (n1 = 0; n1 &lt; 62; n1 += 1)
{
	x = 50 * Math.round( ( 2* Math.cos(a) + Math.sin(a) ) );
	y = 50 * Math.round( ( 2* Math.sin(a) + Math.cos(a) ) );
	stairway.lineTo(x,y);
	a = a + 0.1;
}

//===================================================
//Лестница 2
//===================================================
_root.createEmptyMovieClip("stairway2", 1);
stairway2._y = 200;
stairway2._x = 150; 
stairway2.lineStyle(3,0);
a = 0;
for (n1 = 0; n1 &lt; 62; n1 += 1)
{
	x = 30 * Math.round( ( 2* Math.cos(a) + (1 * Math.sin(a)) ) );
	y = 30 * Math.round( ( 2* Math.sin(a) + (4 * Math.cos(a)) ) );
	stairway2.lineTo(x,y);
	a = a + 0.1;
}

//===================================================
//Лестница 3
//===================================================
_root.createEmptyMovieClip("stairway3", 1);
stairway3._y = 200;
stairway3._x = 150; 
stairway3.lineStyle(3,0);
a = 0;
for (n1 = 0; n1 &lt; 63; n1 += 1)
{
	x = 30 * Math.round( ( 2* Math.cos(a) + (5 * Math.sin(a)) ) );
	y = 30 * Math.round( ( 2* Math.sin(a) + (4 * Math.cos(a)) ) );
	stairway3.lineTo(x,y);
	a = a + 0.1;
}

//===================================================
//Октагон
//===================================================
_root.createEmptyMovieClip("oktagon", 1);
oktagon._y = 200;
oktagon._x = 150; 
oktagon.lineStyle(3,0);
for (n1 = 0; n1 &lt; 360; n1 += 1)
{
	x = 50 * Math.round( ( 2* Math.cos(n1) ) );
	y = 50 * Math.round( ( 2* Math.sin(n1) ) );
	oktagon.lineTo(x,y);
}

//===================================================
//Треугольник внутри квадрата
//===================================================
_root.createEmptyMovieClip("triangle_box", 1);
triangle_box._y = 200;
triangle_box._x = 150; 
triangle_box.lineStyle(3,0);
for (n1 = 0; n1 &lt; 18; n1 += 1)
{
	x = 70 * Math.round( Math.cos(n1));
	y = 70 * Math.round( Math.sin(n1));
	triangle_box.lineTo(x,y);
}

//===================================================
//Спираль
//===================================================
_root.createEmptyMovieClip("spiral", 1);
spiral._y = 200;
spiral._x = 150; 
spiral.lineStyle(3,0);
px = 3; // сжатие по X
py = 3; // сжатие по Y
for (t = 0; t &lt; Math.PI * 6; t += 0.01)
{
	x2 = (Math.cos(t) + t * Math.sin(t)) * px;
	y2 = (Math.sin(t) - t * Math.cos(t)) * py;
	x = Math.round(x2);
	y = Math.round(y2);
	spiral.moveTo(x,y);
	spiral.lineTo(x + 1, y);
}

//===================================================
//Улитка Паскаля
//===================================================
_root.createEmptyMovieClip("canvas", 1);
canvas._x = 150; 
canvas._y = 150;
canvas.lineStyle(3,0);
px = 60;
py = 60;
//for (t = 0; t &lt; 65535; t += 0.0002)
for (t = 0; t &lt; Math.PI * 6; t += 0.009)
{
	r = 1 - Math.cos(t * 10);
	x2 = (r * Math.cos(t * 10)) * px;
	y2 = (r * Math.sin(t * 10)) * py;
	x = Math.round(x2);
	y = Math.round(y2);
	canvas.moveTo(x,y);
	canvas.lineTo(x + 1, y);
}

//===================================================
//Эпициклоида
// 60 - радиус неподвижного круга
// 20 - радиус подвижного круга
//===================================================
//_root.createEmptyMovieClip("canvas", 1);
//canvas._y = 200;
//canvas._x = 150; 
//canvas.lineStyle(3,0);
r0 = 60;	// радиус неподвижного круга
r1 = 20;	// радиус скользящего круга
for (t = 0; t &lt; Math.PI * 6; t += 0.02)
{
	x = (r0 + r1) * Math.cos(t) - r1 * Math.cos(((r0 + r1) / r1) * t);
	y = (r0 + r1) * Math.sin(t) - r1 * Math.sin(((r0 + r1) / r1) * t);
	x = Math.round(x);
	y = Math.round(y);
	x = x + 150;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}

//===================================================
//Эпициклоида 2
//===================================================
/*
_root.createEmptyMovieClip("epic2", 1);
epic2._y = 200;
epic2._x = 150; 
epic2.lineStyle(3,0);
r0 = 50;	// радиус неподвижного круга
r1 = 10;	// радиус скользящего круга
d = 40;		// расстояние от центра неподвижного круга до точки
f = 0;
step = 0.001;	//шаг изменения угла f
len = 6700;		//кол-во повторений цикла

for (n1 = 0; n1 &lt; len; n1 += 1)
{
	f = f + step;
	x = (r0 + r1) * Math.cos(f) - d * Math.cos( (r0 + r1) / (r1 * f) );
	y = (r0 + r1) * Math.sin(f) - d * Math.sin( (r0 + r1) / (r1 * f) );
	x = Math.round(x);
	y = Math.round(y);
	epic2.moveTo(x,y);
	epic2.lineTo(x+1,y);
}
*/

//_root.createEmptyMovieClip("epic2", 1);
//epic2._y = 200;
//epic2._x = 150; 
//epic2.lineStyle(3,0);
r0 = 70;	// радиус неподвижного круга
r1 = 30;	// радиус скользящего круга
d = 20;		// расстояние от центра неподвижного круга до точки
for (t = 0; t &lt; Math.PI * 6; t += 0.02)
{
	x = (r0 + r1) * Math.cos(t) - d * Math.cos(((r0 + r1) / d) * t);
	y = (r0 + r1) * Math.sin(t) - d * Math.sin(((r0 + r1) / d) * t);
	x = Math.round(x);
	y = Math.round(y);
	x = x + 350;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}

//===================================================
//Эпициклоида 3
//===================================================
//_root.createEmptyMovieClip("epic3", 1);
//epic3._y = 200;
//epic3._x = 150; 
//epic3.lineStyle(3,0);
r0 = 70;	// радиус неподвижного круга
r1 = 20;	// радиус скользящего круга
d = 20;		// расстояние от центра неподвижного круга до точки
for (t = 0; t &lt; Math.PI * 6; t += 0.02)
{
	x = (r0 + r1) * Math.cos(t) - d * Math.cos(((r0 + r1) / d) * t);
	y = (r0 + r1) * Math.sin(t) - d * Math.sin(((r0 + r1) / d) * t);
	x = Math.round(x);
	y = Math.round(y);
	x = x + 580;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}

//===================================================
//Эпициклоида 4
//===================================================
//_root.createEmptyMovieClip("epic3", 1);
//epic3._y = 200;
//epic3._x = 150; 
//epic3.lineStyle(3,0);
r0 = 70;	// радиус неподвижного круга
r1 = 30;	// радиус скользящего круга
d = 30;		// расстояние от центра неподвижного круга до точки
for (t = 0; t &lt; Math.PI * 6; t += 0.002)
{
	x = (r0 + r1) * Math.cos(t) - d * Math.cos(((r0 + r1) / d) * t);
	y = (r0 + r1) * Math.sin(t) - d * Math.sin(((r0 + r1) / d) * t);
	x = Math.round(x);
	y = Math.round(y);
	x = x + 830;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}

//===================================================
//Эпициклоида 5
//===================================================
//_root.createEmptyMovieClip("epic5", 1);
//epic5._y = 200;
//epic5._x = 150; 
//epic5.lineStyle(3,0);
r0 = 50;	// радиус неподвижного круга
r1 = 10;	// радиус скользящего круга
d = 40;		// расстояние от центра неподвижного круга до точки
for (t = 0; t &lt; Math.PI * 6; t += 0.02)
{
	x = (r0 + r1) * Math.cos(t) - d * Math.cos((r0 + r1) / d * t);
	y = (r0 + r1) * Math.sin(t) - d * Math.sin((r0 + r1) / d * t);
	x = Math.round(x);
	y = Math.round(y);
	x = x + 1050;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}

//===================================================
//Гипоциклоида
//===================================================
_root.createEmptyMovieClip("canvas", 1);
canvas._x = 30; 
canvas._y = 180;
canvas.lineStyle(3,0);
r0 = 40;	// радиус неподвижного круга
r1 = 40;	// радиус скользящего круга
for (t = 0; t &lt; Math.PI * 6; t += 0.01)
{
	x2 = r0 * (2 * Math.cos(t) - Math.cos(2 * t));
	y2 = r1 * (2 * Math.sin(t) + Math.sin(2 * t));
	x = Math.round(x2);
	y = Math.round(y2);
	canvas.moveTo(x,y);
	canvas.lineTo(x + 1, y);
}

//===================================================
//Астроида
//===================================================
//_root.createEmptyMovieClip("canvas", 1);
//canvas._x = 150; 
//canvas._y = 180;
//canvas.lineStyle(3,0);
px = 80; 
py = 80; 
for (t = 0; t &lt; Math.PI * 6; t += 0.01)
{
	x2 = (Math.cos(t) * Math.cos(t) * Math.cos(t)) * px;
	y2 = (Math.sin(t) * Math.sin(t) * Math.sin(t)) * py;
	x = Math.round(x2);
	y = Math.round(y2);
	x = x + 180;
	canvas.moveTo(x,y);
	canvas.lineTo(x + 1, y);
}

//===================================================
//Гипоциклоида 3
//===================================================
//_root.createEmptyMovieClip("hypo", 1);
//hypo._y = 200;
//hypo._x = 150; 
//hypo.lineStyle(3,0);
r0 = 50;	// радиус неподвижного круга
r1 = 30;	// радиус скользящего круга
d = 40;		// расстояние от центра неподвижного круга до точки
for (t = 0; t &lt; Math.PI * 6; t += 0.02)
{
	x = (r0 + r1) * Math.cos(t) + d * Math.cos( (r0 + r1) / r1 * t );
	y = (r0 + r1) * Math.sin(t) - d * Math.sin( (r0 + r1) / r1 * t );
	x = Math.round(x);
	y = Math.round(y);
	x = x + 280;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}

//===================================================
// function 5
//===================================================
//_root.createEmptyMovieClip("func5", 1);
//func5._y = 200;
//func5._x = 150; 
//func5.lineStyle(3,0);
px = 150;
py = 150;
//for (n1 = 0; n1 &lt; 27000; t += 1)
for (t = 0; t &lt; Math.PI * 9; t += 0.009)
{
	//t = t + 0.001;
	z = (6.2832 * t) / 36;
	x = px * Math.sin(5 * z) * Math.cos( 26 * z);
	y = py * Math.cos(5 * z) * Math.sin( 26 * z);
	x = Math.round(x);
	y = Math.round(y);
	x = x + 480;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}

//===================================================
// function 6
//===================================================
px = 100;
py = 160;
for (t = 0; t &lt; Math.PI * 6; t += 0.002)
{
	//t = t + 0.001;
	x = px * Math.cos(t * 10) * Math.cos( 11 * t);
	y = py * Math.cos(t * 10) * Math.sin( 5 * t);
	x = Math.round(x);
	y = Math.round(y);
	x = x + 730;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}

//===================================================
// function 7
//===================================================
px = 30;
py = 60;
for (t = 0; t &lt; Math.PI * 6; t += 0.002)
{
	r = 1 - Math.cos(t * 10);
	x = (r * Math.cos( 11 * t)) * px;
	y = (r * Math.sin( 5 * t)) * py;
	x = Math.round(x);
	y = Math.round(y);
	x = x + 150;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}
//===================================================
px = 130;
py = 160;
for (t = 0; t &lt; Math.PI * 6; t += 0.002)
{
	//r = 1 - cos(t * 10);
	x = Math.cos( 11 * t) * px;
	y = Math.sin( 7 * t) * py;
	x = Math.round(x);
	y = Math.round(y);
	x = x + 1000;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}

//===================================================
// function 8
//===================================================
px = 60;
py = 60;
num = 6; // кол-во лепестков
for (t = 0; t &lt; Math.PI * 6; t += 0.002)
{
	r = 1 - Math.cos(t * num);
	x = (r * Math.cos(t)) * px;
	y = (r * Math.sin(t)) * py;
	x = Math.round(x);
	y = Math.round(y);
	x = x + 320;
	canvas.moveTo(x,y);
	canvas.lineTo(x+1,y);
}

//===================================================
// function 9
//===================================================
_root.createEmptyMovieClip("canvas", 1);
canvas._x = 30; 
canvas._y = 180;
canvas.lineStyle(3,0);
px = 60;
py = 60;
for (t = 0; t &lt; Math.PI * 6; t += 0.009)
{
	r = 1 - Math.cos(t * 10);
	x2 = (r * Math.cos(t * 3)) * px;
	y2 = (r * Math.sin(t * 3)) * py;
	x = Math.round(x2);
	y = Math.round(y2);
	canvas.moveTo(x,y);
	canvas.lineTo(x + 1, y);
}

//===================================================
// function 10
//===================================================
px = 60;
py = 60;
for (t = 0; t &lt; Math.PI * 9; t += 0.007)
{
	r = 1 - Math.cos(t * 10);
	x2 = (r * Math.cos(t * 1)) * px;
	y2 = (r * Math.sin(t * 7)) * py;
	x = Math.round(x2);
	y = Math.round(y2);
	x = x + 550;
	canvas.moveTo(x,y);
	canvas.lineTo(x + 1, y);
}

//===================================================
// function 11
//===================================================
px = 60;
py = 60;
for (t = 0; t &lt; Math.PI * 9; t += 0.007)
{
	r = 1 - Math.cos(t * 10);
	x2 = (r * Math.cos(t * 7)) * px;
	y2 = (r * Math.sin(t * 7)) * py;
	x = Math.round(x2);
	y = Math.round(y2);
	x = x + 800;
	canvas.moveTo(x,y);
	canvas.lineTo(x + 1, y);
}

//===================================================
// function 12
//===================================================
px = 60;
py = 60;
for (t = 0; t &lt; Math.PI; t += 0.002)
{
	r = 1 - Math.cos(t * 10);
	x2 = (r * Math.cos(t * 21)) * px;
	y2 = (r * Math.sin(t * 21)) * py;
	x = Math.round(x2);
	y = Math.round(y2);
	x = x + 1050;
	canvas.moveTo(x,y);
	canvas.lineTo(x + 1, y);
}</body_value>
	</node>
	
<node id="323" type="note">
		<title>notes</title>
		<created>1331352390</created>
		<changed>1544790498</changed>
		<body_value></body_value>
	</node>
			
<node id="112" type="note" >
		<title>linux_faq</title>
		<created>1356914737</created>
		<changed>1432918307</changed>
		<body_value>=========================================================
SUID

три бита специальных прав: SUID(set UID), SGID(set GID) и sticky bit.
 Право SetUID, установленное на файл, при запуске этого файла дает программе права владельца файла, 
а не права того, кто эту программу запустил. Например, команда смены пароля должна иметь возможность 
писать в файл паролей, а пользователь не должен иметь такой возможности.
 Соответственно на программу изменения паролей (/bin/passwd) ставится SUID и владельцем этой 
программы является root. А значит, будучи запущенной, она всегда имеет права root'а.
 В строке прав SUID показан буквой s вместо x в правах пользователя (если права выполненя нет, то S):

 Аналогично действует право SGID, но в этом случае меняется группа программы.
 Также для каталогов в Linux при установленном этом бите создаваемые в каталоге файлы 
всегда будут иметь ту же группу, что и каталог. В строке прав это право указывается 
буквой s вместо x в правах группы.
 В Linux есть ещё одно использование этого права: если есть это право и нет права для 
группы на выполнение, то при открытии этого файла используется 
механизм принудительного захвата (mandatory locking).
 То есть можно запретить открывать этот файл кому-либо ещё, пока он открыт. Для всех прочих файлов 
используется механизм добровольного захвата (advisory locking): 
можно установить запрет на открытие, но остальные программы должны проверять статус этого запрета 
и могут игнорировать захват.

sticky bit в прошлом использовался, чтобы программа с данным битом после закрытия 
не выгружалась из памяти. В настоящее время, единственное его использование: 
если каталог имеет это право, то удалить из него файл имеет право только владелец файла 
или владелец каталога. Как правило это право устанавливается на каталог /tmp.
=====================</body_value>
	</node>
	
<node id="118" type="note" >
		<title>web</title>
		<created>1351774672</created>
		<changed>1429540925</changed>
		<body_value>=========================================
 &lt;link media="only screen and (max-device-width: 370px)" rel="alternate" href="http://seondo.loc/phone/index.html"/&gt;??????????
=========================================
1. php+apache+mysql ( редко oracle) самый дешевый
2. .NET+IIS+mssql
3. j2ee+ mssql или oracle (tomcat если не java-машина).

=========================================
Стандарт HTML 4.01 Strict (строгий), Transitional (переходный), Frameset (с фреймами)

&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"&gt;
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd"&gt;

Стандарт XHTML 1.0 Strict (строгий), Transitional (переходный), Frameset (с фреймами)

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd"&gt;

Стандарт XHTML 1.1 DTD

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;

http://www.webmascon.com/topics/coding/25a.asp
-----------------------------------
- font-family: "Museo","Trebuchet MS",Trebuchet,Tahoma,Arial,sans-serif;
-----------------------------------

=========================
атрибут download, скачать файл вместо открытия
&lt;a href="myFolder/myImage.png" download&gt;Download image&lt;/a&gt;</body_value>
	</node>

<node id="123" type="note" >
		<title>config</title>
		<created>1337690669</created>
		<changed>1428116651</changed>
		<body_value>-----------------------------------
ADSL Port 	Enable
Downstream Line Rate 	6133
Upstream Line Rate 	638
LAN IP Address 	192.168.0.2
Default Gateway 	213.228.116.8
Primary DNS Server 	217.70.96.34
Secondary DNS Server 	217.70.106.5
Ethernet MAC Address 	00:15:EB:B6:73:C1
Firmware Version 	ZXDSL 831IIV5.5.1a_E09_OV
------------------------------------
&lt;note&gt;
Офис: Excel, Word
&lt;pre&gt;
как в excel задать размер ячееек в мм или см: 
Если делать вручную, без VBA, можно воспользоваться следующим трюком: 
1.нарисовать прямоугольник (панель "рисование")
2.задать ему нужные размеры (эти размеры задаются в см)
3.отметить в его свойствах "не менять размеры и не перемещать с ячейками"
4.подогнать границы колонок так, чтобы они совпали с границами прямоугольника. 
&lt;/pre&gt;
&lt;/note&gt;</body_value>
	</node>

<node id="126" type="note" >
		<title>закладки</title>
		<created>1337691044</created>
		<changed>1432966901</changed>
		<body_value></body_value>
	</node>

<node id="135" type="note" >
		<title>APT, создать локальный репозитарий</title>
		<created>1367982814</created>
		<changed>1525170821</changed>
		<body_value>/etc/apt/sources.list
deb http://192.168.0.4/www/mirror/ lucid main
-------------
*****************
create_repo.sh
*****************
#!/bin/sh
# create local repository

#base_dir=/mnt/disk2_3/soft/linux_soft/my_repository/ubuntu_10.04_apt
#repository=/mnt/disk2_3/soft/linux_soft/my_repository/mirror

#base_dir=/home/soft/
#repository=/home/soft/mirror

#base_dir=/media/b209fd52-5ec7-4223-9077-723bdc1020fd/my_repository/mirror/pool/lucid/main
base_dir=/media/b209fd52-5ec7-4223-9077-723bdc1020fd/my_repository/ubuntu_8.04_apt

#repository=/media/b209fd52-5ec7-4223-9077-723bdc1020fd/my_repository/mirror_`date +%F`
#repository=/media/b209fd52-5ec7-4223-9077-723bdc1020fd/my_repository/mirror
repository=/media/KINGSTON/soft/linux_soft/mirror

#product_name=lucid
product_name=hardy

mkdir $repository
mkdir -p $repository/pool/$product_name/main # folder for deb-packages
mkdir -p $repository/dists/$product_name/main/binary-i386 # folder for Packages.gz
#cp -R $base_dir/* $repository/pool/$product_name/main

cd $repository
sudo apt-ftparchive packages pool/$product_name/main | gzip &gt; dists/$product_name/main/binary-i386/Packages.gz

#sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak

#sudo echo deb file:$repository $product_name main &gt; /etc/apt/sources.list
#sudo echo deb http://192.168.0.4/www/mirror $product_name main &gt; /etc/apt/sources.list
#sudo echo deb http://192.168.1.123/mirror $product_name main &gt; /etc/apt/sources.list

#sudo apt-get update

***********************
update_repo.sh
***********************
#!/bin/sh
# update local repository

#base_dir=/mnt/disk2_3/soft/linux_soft/my_repository/ubuntu_10.04_apt
#repository=mirror

#product_name=hardy
product_name=lucid

#repository=/media/b209fd52-5ec7-4223-9077-723bdc1020fd/my_repository/mirror_`date +%F`
#repository=/media/b209fd52-5ec7-4223-9077-723bdc1020fd/soft/linux_soft/my_repository/mirror
#repository=/media/KINGSTON/soft/linux_soft/mirror
repository=/media/KINGSTON/soft/linux_soft/mirror

cd $repository
sudo apt-ftparchive packages pool/$product_name/main | gzip &gt; dists/$product_name/main/binary-i386/Packages.gz
#dpkg-scanpackages ./mirror_2010-11-27/pool/lucid/main | gzip &gt; ./mirror_2010-11-27/dists/lucid/main/binary-i386/Packages.gz

#sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak
#sudo echo deb file:$base_dir/$repository lucid main &gt; /etc/apt/sources.list
#sudo echo deb http://192.168.0.4/www/soft/linux,bsd/linux/my_repository/mirror lusid main &gt; /etc/apt/sources.list
#sudo apt-get update</body_value>
	</node>
	
		</content>		
	</xdata>
</xroot>